{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/Textform.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","React","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","Navbar","concat","Link","to","tittle","aria-label","aria-current","about","onClick","toggleMode","role","htmlFor","Textform","text","setText","useState","Fragment","heading","value","onChange","event","target","rows","disabled","length","handleUpClick","newtext","toUpperCase","showAlert","handleLoclick","toLowerCase","handleClearclick","handleCopy","navigator","clipboard","writeText","handleExtraSpaces","newText","split","join","handleSentenceclick","charAt","slice","handleTitleclick","replace","char","i","filter","element","Alert","height","alert","Word","lower","capitalize","msg","propType","PropTypes","string","isRequired","defaultProps","App","setMode","setAlert","message","setTimeout","Router","document","body","Routes","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.96798012.chunk.js","sourcesContent":["import React from 'react'\r\nexport default function About(props) {\r\n  \r\nlet myStyle = {\r\n  color :props.mode === 'dark'?'white':'#042743',\r\n  backgroundColor : props.mode === 'dark'?'rgb(36 74 104)':'white',\r\n}\r\n  return (\r\n         <div className=\"container\" style={{ color :props.mode === 'dark'?'white':'#042743'}}>\r\n                <h1 className='my-2'>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\">\r\n                <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    <strong>Analyze Your </strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                   Textutils gives you a way to analyze your text quickly and efficiently. Be it Word count ,character count or\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\">\r\n                <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    <strong>Free to use</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body \" style={myStyle}>\r\n                   Textutils is a free character tool that provides instant character count & word count statistics for a given text. Textutils reports the number of word and characters.\r\n                    Thus it is suitable for writing text with word/ character limit.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\">\r\n                <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                <strong>Browser Compatible</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                   This word counetr software works in any web browser such as chrome, Firefox, Internet Explorer, Safari,Opera.\r\n                   It suits to count characters in facebook,blog,books,excel document, essays etc.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n           {/* <div className=\"container my-3\">\r\n            <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary\">{btntext}</button>\r\n         </div>*/}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.tittle}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n          </li>\r\n        </ul>\r\n        <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n         <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n       </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\nNavbar.propType = {tittle: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired,\r\n     \r\n};\r\nNavbar.defaultProps = {\r\n  tittle: 'set tittle here',\r\n    about: 'set about here',\r\n};\r\n\r\n","import React ,{useState}from 'react'\r\n\r\nexport default function Textform(props) {\r\n  \r\n    const handleUpClick= () =>{\r\n        let newtext = text.toUpperCase();\r\n        setText(newtext)\r\n        props.showAlert(\"Conerted to uppercase\", \"success\")\r\n    }\r\n    const handleLoclick = () =>{\r\n      let newtext = text.toLowerCase();\r\n      setText(newtext)\r\n      props.showAlert(\"Conerted to lowercase\", \"success\")\r\n  }\r\n  const handleClearclick = () =>{\r\n     let newtext = '';\r\n     setText(newtext)\r\n     props.showAlert(\"Text Cleared \", \"success\")\r\n  }\r\n    const handleOnchange= (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = () =>{\r\n      navigator.clipboard.writeText(text);\r\n      props.showAlert(\"Copied to clipboard\", \"success\")\r\n    }\r\n\r\n   const handleExtraSpaces = () =>{\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\" Extra spaces Removed\", \"success\")\r\n  }\r\n    const handleSentenceclick = () => {\r\n      const newtext = text.charAt(1).toUpperCase() + text.slice(1).toLowerCase();\r\n      setText(newtext);\r\n      props.showAlert(\"sentencecase done\" , \"success\")\r\n    }\r\n    const handleTitleclick = () => {\r\n     const newtext = text.toLowerCase().replace(/\\b\\w/g, char => char.toUpperCase());\r\n      setText(newtext);\r\n      props.showAlert(\"titlecase done\" , \"success\")\r\n      \r\n    }\r\n    const handleAltnatclick = (event) => {\r\n      let newText = '';\r\n  \r\n      for (let i = 0; i < text.length; i++) {\r\n        if (i % 2 === 0) {\r\n          newText += text[i].toUpperCase();\r\n        } else {\r\n          newText += text[i].toLowerCase();\r\n        }\r\n      }\r\n      setText(newText);\r\n    };\r\n  const [text, setText] = useState(' ');\r\n    \r\n  return (\r\n    <>\r\n    <div  className=\"container  my-3\" style={{color:props.mode === 'dark'?'white':'#042743'}} >\r\n      <h1 className='mb-4'>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n      <textarea className=\"form-control\" value={text}  onChange={handleOnchange} style={{backgroundColor:props.mode === 'dark'?'#13466e':'white',color:props.mode === 'dark'?'white':'#042743'}}  id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button disabled ={text.length===0} className='btn btn-success mx-1 my-1'  onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button disabled ={text.length===0} className='btn btn-success mx-1 my-1'  onClick={handleLoclick}>Convert to Lowercase</button>\r\n      <button disabled ={text.length===0} className='btn btn-success mx-1 my-1'  onClick={handleClearclick}>Clear Text</button>\r\n      <button disabled ={text.length===0} className='btn btn-success mx-1 my-1'  onClick={handleCopy}>Copy Text</button>\r\n      <button disabled ={text.length===0} className='btn btn-success mx-1 my-1'  onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n      <button disabled ={text.length===0} className='btn btn-success mx-1 my-1'  onClick={handleSentenceclick}>Sentence Case</button>\r\n      <button disabled ={text.length===0} className='btn btn-success mx-1 my-1'  onClick={handleTitleclick}>Title Case</button>\r\n      <button disabled ={text.length===0} className='btn btn-success mx-1 my-1'  onClick={handleAltnatclick}>Alternating Case</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode === 'dark'?'white':'#042743'}}> \r\n      <h1>Text Summary </h1>\r\n      <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length } Minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n \r\n    const capitalize =(Word) =>{\r\n     const lower = Word.toLowerCase();\r\n     return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n    <div style = {{height : '50px'}}>\r\n   { props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div> }\r\n    </div>\r\n  )\r\n}\r\n","import React , { useState } from 'react';\nimport './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Textform from './Components/Textform';\nimport Alert from './Components/Alert';\n\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  \n} from \"react-router-dom\";\n\n function App() {\n  const [mode,setMode] = useState('light')\n  const [alert,setAlert] = useState(null);\n \n  const showAlert =(message, type)=>{\n     setAlert({\n      msg: message,\n      type : type\n     })\n     setTimeout(() =>{\n       setAlert(null)\n     },1500)\n  }\n\n\n const toggleMode = () =>{\n  if (mode ==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#042743';\n    showAlert(\"Dark mode has been enabled\", \"success\")\n   \n  }\n  else{\n    setMode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert(\"Light mode has been enabled\", \"success\")\n    }}\n  return (\n    <>\n    <Router>\n    <Navbar   tittle=\"TextUtils\"  about=\"About Us \" mode={mode} toggleMode={toggleMode}/> \n    <Alert  alert={alert}/>\n    <div className=\"container my-3\">\n    <Routes>\n          <Route path=\"/about\"element ={<About mode={mode}/>}>\n          </Route>\n          <Route path=\"/\" element = \n          {<Textform showAlert={showAlert} heading=\" Try Textutils - word counter , Character counter , clear text\" mode={mode}/>}>\n         </Route>\n    </Routes>\n        </div> \n        \n      </Router>\n     </>\n  );\n  }\n  export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}